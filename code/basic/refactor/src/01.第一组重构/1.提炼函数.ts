/**
 * 重构：提炼函数
 * 反向重构：内联函数
 */

/**
 * 将意图和实现分开
 * 如果说浏览一段代码需要花一段时间才能够理解的了，那么久应该将这段代码提炼到一个函数当中
 * 并根据这个函数做的事去命名，以后再读这段代码的时候就可知道这个函数的用途是啥，不需要去理解函数的实现过程
 */

/**
 * 函数名的长度不重要，有时候可能函数名的长度会比函数本身还要长。
 * 使用“提炼函数”的招数去重构代码：
 * 1. 创建一个新的函数，并且以这个新函数最终做了一件什么事去命名。（注意：是“做了啥”， 不是“咋么做”）
 * 2. 将需要提炼的函数，从原来的地方复制到新函数里头去
 * 3. 细心观察新函数，看看里头的逻辑是不是有没法引用到的变量，使用传参的形式传入。（注意：如果新函数里头引用
 * 的变量只有这个新函数用，外边没用到，那么就应该把外边的声明拿进来）
 * 4. 如果被引用的变量实在太多，应先放弃重构
 * 5. 在源代码的地方用这个函数替换掉原本的那几行代码
 * 6. 测试新代码
 */



